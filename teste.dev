#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void imprimirMatriz(char matriz[3][3]) {
int i,j;
printf("\n 1 2 3\n");
printf(" -------\n");

for(i = 0; i < 3; i++) {
    printf("%d|", i+1);
    
    for(j = 0; j < 3; j++) {
	    printf("%c ", matriz[i][j]);
}
	printf("\n");
}
	printf(" -------\n");
} 

void jogar() {
int i,j;
int jogadas = 0;
char vezDoJogador = 'X';
char matriz[3][3] = {
{'-', '-', '-'},
{'-', '-', '-'},
{'-', '-', '-'}
};

imprimirMatriz(matriz);

for(i = 0; i < 3; i++) {
    for(j = 0; j < 3; j++) {
        int linha, coluna;
        printf("\nVez do jogador %c\n", vezDoJogador);
        do {
            printf("Digite a linha (1 a 3): ");
            scanf("%d", &linha);

            while(linha < 1 || linha > 3) {
                printf("Entrada inválida. Digite novamente a linha (1 a 3): ");
                scanf("%d", &linha);
            }

            printf("Digite a coluna (1 a 3): ");
            scanf("%d", &coluna);

            while(coluna < 1 || coluna > 3) {
                printf("Entrada inválida. Digite novamente a coluna (1 a 3): ");
                scanf("%d", &coluna);
            }

            if(matriz[linha-1][coluna-1] != '-') {
                printf("\nCélula já preenchida. Escolha outra.\n");
            }

        } while(matriz[linha-1][coluna-1] != '-');
        
        matriz[linha-1][coluna-1] = vezDoJogador;
        jogadas++;
        imprimirMatriz(matriz);

        char ganhador = verificarGanhador(matriz);
        if(ganhador != '-') {
            printf("\nJogador %c ganhou!\n", ganhador);
            return;
        }

        if(jogadas == 9) {
            printf("\nEmpate!\n");
            return;
        }

        if(vezDoJogador == 'X') {
            vezDoJogador = 'O';
        } else {
            vezDoJogador = 'X';
        }
    }
}

}

int main() {
int opcao;
char jogador1, jogador2;
printf("Jogador 1: ");
jogador1 = escolherSimbolo();
jogador2 = (jogador1 == 'X') ? 'O' : 'X';
do {
printf("\n========== MENU ==========\n");
printf("1 - Jogar\n");
printf("2 - Sair\n");
printf ("0-)Sair \n");
printf("==========================\n");
printf("Escolha uma opção: ");
scanf("%d", &opcao);
switch (opcao) {
case 1:
jogar();
break;
case 2:
printf("\nSaindo do jogo...\n");
limpar();
break;
default:
printf("\nOpção inválida, tente novamente.\n");
limpar();
break;
}
} while (opcao != 2);
return 0;
}

int escolherSimbolo() {
char simbolo;
printf("Escolha entre 'X' e 'O': ");
scanf(" %c", &simbolo);
while (simbolo != 'X' && simbolo != 'O') {
printf("Escolha inválida. Por favor, escolha entre 'X' e 'O': ");
scanf(" %c", &simbolo);
limpar();
}
return simbolo;
}

void limpar()
{
    system ("clear || cls");
}

int verificarGanhador(char matriz[3][3]) {
int i,j;
for(i = 0; i < 3; i++) {
if(matriz[i][0] == matriz[i][1] && matriz[i][1] == matriz[i][2] && matriz[i][0] != '-') {
return matriz[i][0];
}
}
for(j = 0; j < 3; j++) {
    if(matriz[0][j] == matriz[1][j] && matriz[1][j] == matriz[2][j] && matriz[0][j] != '-') {
        return matriz[0][j];
    }
}

if(matriz[0][0] == matriz[1][1] && matriz[1][1] == matriz[2][2] && matriz[0][0] != '-') {
    return matriz[0][0];
}
if(matriz[0][2] == matriz[1][1] && matriz[1][1] == matriz[2][0] && matriz[0][2] != '-') {
    return matriz[0][2];
}

return '-';
}
